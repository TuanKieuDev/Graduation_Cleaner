import 'dart:math';
import 'package:flutter_svg/svg.dart';
import 'package:phone_cleaner/router/router.dart';
import 'package:phone_cleaner/src/commons/commons.dart';
import 'package:phone_cleaner/src/commons/widgets/simple_shadow.dart';
import 'package:phone_cleaner/src/features/file/features/filter/views/file_filter_page.dart';
import 'package:phone_cleaner/src/features/file/file.dart';
import 'package:phone_cleaner/src/themes/themes.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:go_router/go_router.dart';

import '../../../../../commons/widgets/file_checkbox_item.dart';

class MediaFolderPart extends ConsumerWidget {
  const MediaFolderPart({
    super.key,
    required this.padding,
  });

  final EdgeInsets padding;

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final folderControllerProvider = ref.watch(mediaFolderControllerProvider);

    if (folderControllerProvider.hasError) {
      return const SizedBox.shrink();
    }

    final foldersInfo = folderControllerProvider.requireValue;

    if (foldersInfo.isEmpty) return const SizedBox.shrink();

    final foldersLength = min(foldersInfo.length, 6);

    final cleanerColor = CleanerColor.of(context)!;

    Future<void> showInfoiDialog() async {
      return showDialog<void>(
          context: context,
          builder: (context) {
            return NoteDialog(
              title: 'About folders',
              content: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisSize: MainAxisSize.min,
                children: [
                  Text(
                    "Groups media files based on their storage location, with folders potentially being generated by either applications or the operating system.",
                    style: regular14.copyWith(color: cleanerColor.neutral5),
                  )
                ],
              ),
            );
          });
    }

    return Padding(
      padding: padding,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Row(
                children: [
                  Text(
                    "Folders",
                    style: bold20.copyWith(color: cleanerColor.primary10),
                  ),
                  TextButton(
                    onPressed: () {
                      showInfoiDialog();
                    },
                    child: const Icon(
                      Icons.info_outline,
                      size: 20,
                      color: Color.fromRGBO(51, 167, 82, 1),
                    ),
                  ),
                ],
              ),
              AllButton(
                onPress: () => GoRouter.of(context).pushNamed(
                  AppRouter.fileFilter,
                  extra: const FileFilterArguments(
                      fileFilterParameter: mediaFolderFilterParam),
                ),
              )
            ],
          ),
          Text(
            '${foldersInfo.length} ${foldersInfo.length > 1 ? 'folders' : 'folder'} ',
            style: regular14.copyWith(color: cleanerColor.neutral1),
          ),
          GridView.count(
              physics: const NeverScrollableScrollPhysics(),
              padding: const EdgeInsets.symmetric(vertical: 16),
              childAspectRatio: 0.75,
              crossAxisCount: 3,
              crossAxisSpacing: 0,
              mainAxisSpacing: 16,
              shrinkWrap: true,
              children: [
                for (int i = 0; i < foldersLength; i++)
                  _FolderItem(data: foldersInfo[i])
              ]),
        ],
      ),
    );
  }
}

class _FolderItem extends StatelessWidget {
  const _FolderItem({
    Key? key,
    required this.data,
  }) : super(key: key);

  final FileCategory data;

  @override
  Widget build(BuildContext context) {
    final cleanerColor = CleanerColor.of(context)!;
    return TextButton(
      onPressed: () => GoRouter.of(context).pushNamed(AppRouter.fileFilter,
          extra: const FileFilterArguments(
            fileFilterParameter: mediaFolderFilterParam,
          )),
      style: TextButton.styleFrom(
        padding: const EdgeInsets.all(0),
      ),
      child: Stack(
        alignment: Alignment.topCenter,
        children: [
          Positioned(
            height: messageLabelIconSize,
            left: 0,
            right: 0,
            child: MessageLabel(size: data.totalSize),
          ),
          const Positioned(
            top: messageLabelIconSize - 1.82,
            height: 61,
            child: SimpleShadow(
              alignment: Alignment.topCenter,
              color: Color.fromRGBO(66, 133, 244, 0.4),
              offset: Offset(0, 2),
              blur: 3,
              child: CleanerIcon(
                icon: CleanerIcons.folder,
              ),
            ),
          ),
          Positioned(
            top: messageLabelIconSize - 1.82 + 61 + 8,
            left: 0,
            right: 0,
            height: 40,
            child: Text(
              data.name,
              style: regular14.copyWith(color: cleanerColor.primary10),
              maxLines: 2,
              overflow: TextOverflow.ellipsis,
              textAlign: TextAlign.center,
            ),
          ),
          Positioned(
            top: messageLabelIconSize - 1.82 + 16,
            child: data.iconPath != null
                ? AppIcon(packageName: data.iconPath!)
                : _FolderIcon(
                    folderData: data,
                    size: 32,
                  ),
          ),
        ],
      ),
    );
  }
}

class _FolderIcon extends StatelessWidget {
  const _FolderIcon({
    required this.folderData,
    required this.size,
  });

  final FileCategory folderData;
  final double size;
  String folderIconPath(FileCategory fileCategory) {
    String path = 'assets/icons/media_folder/file.svg';
    if (fileCategory.isAllPhoto) {
      path = 'assets/icons/media_folder/photo.svg';
    }
    if (fileCategory.isAllVideo) {
      path = 'assets/icons/media_folder/video.svg';
    }
    if (fileCategory.isAllAudio) {
      path = 'assets/icons/media_folder/audio.svg';
    }
    if (fileCategory.name.toLowerCase().contains('download')) {
      path = 'assets/icons/media_folder/download.svg';
    }
    if (fileCategory.name.toLowerCase().contains('camera')) {
      path = 'assets/icons/media_folder/camera.svg';
    }
    return path;
  }

  @override
  Widget build(BuildContext context) {
    return SvgPicture.asset(
      folderIconPath(folderData),
      height: size,
      width: size,
      alignment: Alignment.center,
      fit: BoxFit.contain,
    );
  }
}
